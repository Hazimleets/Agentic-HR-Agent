{"ast":null,"code":"var _jsxFileName = \"E:\\\\Data Science\\\\projects\\\\hr_agent\\\\4_agentic_hiring_bot\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [jobInput, setJobInput] = useState({\n    title: '',\n    description: '',\n    requirements: '',\n    role: 'Hiring Manager'\n  });\n  const [jobId, setJobId] = useState('');\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setJobInput({\n      ...jobInput,\n      [name]: value\n    });\n  };\n  const handleJobIdChange = e => {\n    setJobId(e.target.value);\n  };\n  const runWorkflow = async payload => {\n    setLoading(true);\n    setError('');\n    setResponse(null);\n    try {\n      const res = await axios.post('http://127.0.0.1:5000/run_agent', payload, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setResponse(res.data.result);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError('Error running workflow: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createJob = () => {\n    const requirements = jobInput.requirements.split(',').map(req => req.trim());\n    runWorkflow({\n      ...jobInput,\n      requirements\n    });\n  };\n  const runExistingJob = () => {\n    if (!jobId) {\n      setError('Please enter a Job ID');\n      return;\n    }\n    runWorkflow({\n      job_id: parseInt(jobId)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Agentic Hiring Bot Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Job Title\",\n        value: jobInput.title,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Job Description\",\n        value: jobInput.description,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"requirements\",\n        placeholder: \"Requirements (comma-separated)\",\n        value: jobInput.requirements,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createJob,\n        disabled: loading,\n        children: loading ? 'Creating...' : 'Create Job'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Run Workflow for Existing Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Job ID\",\n        value: jobId,\n        onChange: handleJobIdChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: runExistingJob,\n        disabled: loading,\n        children: loading ? 'Running...' : 'Run Workflow'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Workflow Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(response, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/6t+Mn0A5Wchv41A8xLKDwEEyfQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","jobInput","setJobInput","title","description","requirements","role","jobId","setJobId","response","setResponse","loading","setLoading","error","setError","handleInputChange","e","name","value","target","handleJobIdChange","runWorkflow","payload","res","post","headers","data","result","err","_err$response","_err$response$data","message","createJob","split","map","req","trim","runExistingJob","job_id","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","disabled","JSON","stringify","_c","$RefreshReg$"],"sources":["E:/Data Science/projects/hr_agent/4_agentic_hiring_bot/frontend/src/App.jsx"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './index.css';\r\n\r\nfunction App() {\r\n  const [jobInput, setJobInput] = useState({\r\n    title: '',\r\n    description: '',\r\n    requirements: '',\r\n    role: 'Hiring Manager',\r\n  });\r\n  const [jobId, setJobId] = useState('');\r\n  const [response, setResponse] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setJobInput({ ...jobInput, [name]: value });\r\n  };\r\n\r\n  const handleJobIdChange = (e) => {\r\n    setJobId(e.target.value);\r\n  };\r\n\r\n  const runWorkflow = async (payload) => {\r\n    setLoading(true);\r\n    setError('');\r\n    setResponse(null);\r\n    try {\r\n      const res = await axios.post('http://127.0.0.1:5000/run_agent', payload, {\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n      setResponse(res.data.result);\r\n    } catch (err) {\r\n      setError('Error running workflow: ' + (err.response?.data?.error || err.message));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createJob = () => {\r\n    const requirements = jobInput.requirements.split(',').map((req) => req.trim());\r\n    runWorkflow({ ...jobInput, requirements });\r\n  };\r\n\r\n  const runExistingJob = () => {\r\n    if (!jobId) {\r\n      setError('Please enter a Job ID');\r\n      return;\r\n    }\r\n    runWorkflow({ job_id: parseInt(jobId) });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Agentic Hiring Bot Demo</h1>\r\n      <div className=\"section\">\r\n        <h2>Create New Job</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Job Title\"\r\n          value={jobInput.title}\r\n          onChange={handleInputChange}\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder=\"Job Description\"\r\n          value={jobInput.description}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"requirements\"\r\n          placeholder=\"Requirements (comma-separated)\"\r\n          value={jobInput.requirements}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button onClick={createJob} disabled={loading}>\r\n          {loading ? 'Creating...' : 'Create Job'}\r\n        </button>\r\n      </div>\r\n      <div className=\"section\">\r\n        <h2>Run Workflow for Existing Job</h2>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Job ID\"\r\n          value={jobId}\r\n          onChange={handleJobIdChange}\r\n        />\r\n        <button onClick={runExistingJob} disabled={loading}>\r\n          {loading ? 'Running...' : 'Run Workflow'}\r\n        </button>\r\n      </div>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {response && (\r\n        <div className=\"response\">\r\n          <h2>Workflow Result</h2>\r\n          <pre>{JSON.stringify(response, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}